{"version":3,"sources":["Components/GameArea/CutieMark.js","Components/Login/index.js","Components/GameArea/GameArea.js","Components/PonyArea/MyLittlePony.js","Components/PonyArea/PonyArea.js","Components/Billboard.js","Components/PonyModal.js","Components/Scoreboard.js","App.js","index.js"],"names":["CutieMark","props","Col","xs","sm","className","onClick","clickMark","id","alt","name","src","image","Login","Container","Row","type","value","setDifficulty","GameArea","children","MyLittlePony","lg","xl","difficulty","clickPony","unlocked","PonyArea","Billboard","display","PonyModal","Modal","show","onHide","handleClose","Header","closeButton","Title","modalTitle","Body","modalImage","modalBody","Footer","Button","variant","Scoreboard","targetScore","playerScore","playerWins","playerLosses","totalClicks","App","context","x","setState","myLittlePonies","state","slice","generateTargetScore","shuffleArray","handleShow","array","tempVal","randomIndex","currentIndex","length","Math","floor","random","randomizer","min","max","componentDidMount","cutieMarks","valArray","selectAPony","mlpCopy","JSON","parse","stringify","roundWon","text","y","showPony","roundLost","losses","pointValue","currentScore","target","clicks","thisPony","filter","e","bio","bind","CutieMarksJSON","MyLittlePoniesJSON","this","fluid","map","cutieMark","index","key","myLittlePony","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a18521ab.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Col } from \"react-bootstrap\";\r\n\r\nconst CutieMark = ( props ) => {\r\n  return (\r\n    <Col \r\n      xs = { 3 } sm = { 6 }\r\n      className = \"hovereffect p-2 m-0\"\r\n      onClick = { () => props.clickMark( props.id )}\r\n    >\r\n      <img\r\n        alt = { props.name }\r\n        src = { props.image }\r\n        className = \"cutieMark\"\r\n      />\r\n    </Col>\r\n  )\r\n}\r\n\r\nexport default CutieMark;","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst Login = ( props ) => {\r\n  return (\r\n    <Container>\r\n      <Row className = \"justify-content-center\">\r\n        <Col xs = { 12 } sm = { 6 } className = \"login p-5 my-5\">\r\n          <form>\r\n            <h1>Welcome to Ponyville.</h1>\r\n            <p>Can you rescue the missing My Little Ponies and all their friends?</p>\r\n            <p>Select Difficulty:</p>\r\n            <button className = \"loginBtn p-2 m-2\" type = \"button\" value = \"1\" onClick = {() => props.setDifficulty( 1 )}>Easy</button>\r\n            <button className = \"loginBtn p-2 m-2\" type = \"button\" value = \"2\" onClick = {() => props.setDifficulty( 2 )}>Normal</button>\r\n            <button className = \"loginBtn p-2 m-2\" type = \"button\" value = \"3\" onClick = {() => props.setDifficulty( 3 )}>Hard</button>\r\n          </form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\n\r\nconst GameArea = ( props ) => {\r\n  return (\r\n    <div className = \"gameArea p-1 m-2\">\r\n      { props.children }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameArea;","import React from \"react\";\r\nimport { Col } from \"react-bootstrap\";\r\n\r\nconst MyLittlePony = ( props ) => {\r\n  return (\r\n    <Col \r\n      xs = { 6 } sm = { 4 } lg = { 3 } xl = { props.difficulty === 1 ? 3 : 2 }\r\n      className = \"ponyContainer p-2\"\r\n      onClick = { () => props.clickPony( props.id ) }\r\n    >\r\n      <img\r\n        alt = { props.name }\r\n        src = { props.image }\r\n        unlocked = { props.unlocked }\r\n        className = { props.unlocked ? \"myLittlePony found\" : \"myLittlePony hidden\" }\r\n      />\r\n    </Col>\r\n  )\r\n}\r\n\r\nexport default MyLittlePony;","import React from \"react\";\r\n\r\nconst PonyArea = ( props ) => {\r\n  return (\r\n    <div className = \"ponyArea m-0 p-0\">\r\n      { props.children }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PonyArea;","import React from \"react\";\r\n\r\nconst Billboard = ( props ) => {\r\n  return (\r\n    <div className = \"textboard p-2 m-2\">\r\n      <span className = \"text-center\">{ props.display }</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Billboard;","import React from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nconst PonyModal = ( props ) => {\r\n  return (\r\n    <Modal show = { props.show } onHide = { props.handleClose }>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{ props.modalTitle }</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <img \r\n          src = { props.modalImage }\r\n          alt = { props.modalTitle }\r\n        />\r\n        <p>{ props.modalBody }</p>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button \r\n          variant = \"warning\" \r\n          onClick = { () => props.handleClose() }\r\n        >\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default PonyModal;","import React from \"react\";\r\n\r\nconst Scoreboard = ( props ) => {\r\n  return (\r\n    <div className = \"textboard p-2 m-2\">\r\n      <span className = \"heading\">Target Score:</span>\r\n      <span className = \"data\">{ props.targetScore }</span>\r\n      <span className = \"heading\">Player Score:</span>\r\n      <span className = \"data\">{ props.playerScore }</span>\r\n      <span className = \"heading\">Player Wins:</span>\r\n      <span className = \"data\">{ props.playerWins }</span>\r\n      <span className = \"heading\">Player Losses:</span>\r\n      <span className = \"data\">{ props.playerLosses }</span>\r\n      <span className = \"heading\">Total Clicks:</span>\r\n      <span className = \"data\">{ props.totalClicks }</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Scoreboard;","import React, { Component } from 'react';\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport CutieMarksJSON from \"./JSON/CutieMarks.json\";\r\nimport MyLittlePoniesJSON from \"./JSON/myLittlePonies.json\";\r\nimport CutieMark from \"./Components/GameArea/CutieMark.js\";\r\nimport Login from \"./Components/Login\";\r\nimport GameArea from \"./Components/GameArea/GameArea.js\";\r\nimport MyLittlePony from \"./Components/PonyArea/MyLittlePony\";\r\nimport PonyArea from \"./Components/PonyArea/PonyArea\";\r\nimport Billboard from \"./Components/Billboard\";\r\nimport PonyModal from \"./Components/PonyModal\";\r\nimport Scoreboard from \"./Components/Scoreboard\";\r\nimport \"./styles.scss\";\r\n\r\nclass App extends Component {\r\n  constructor( props, context ){\r\n    super ( props, context );\r\n    this.setDifficulty = this.setDifficulty.bind( this );\r\n    this.handleShow = this.handleShow.bind( this );\r\n    this.handleClose = this.handleClose.bind( this );\r\n    this.state = {\r\n      playerWins: 0,\r\n      playerLosses: 0,\r\n      targetScore: 0,\r\n      playerScore: 0,\r\n      totalClicks: 0,\r\n      difficulty: 0,\r\n      cutieMarks: CutieMarksJSON,\r\n      myLittlePonies: MyLittlePoniesJSON,\r\n      valArray: [ 1,2,3,4,5,6,7,8,9 ],\r\n      display: \"Match the Target Score by clicking on the Cutie Marks, each Cutie Mark has a hidden value.\",\r\n      show: false,\r\n      modalBody: \"Temp Body\",\r\n      modalTitle: \"Temp Title\",\r\n      modalImage: \"Temp Image\"\r\n    }\r\n  }\r\n\r\n  //this sets the game difficulty, then generates the score AFTER the difficulty is set\r\n  setDifficulty = ( x ) => {\r\n    if ( x === 1 ) { \r\n      this.setState({ myLittlePonies: this.state.myLittlePonies.slice( 0, 12 )});\r\n    } else if ( x === 2 ) {\r\n      this.setState({ myLittlePonies: this.state.myLittlePonies.slice( 0, 24 )});\r\n    }\r\n    this.setState({ difficulty: x }, () => { \r\n      this.generateTargetScore();\r\n      this.shuffleArray( this.state.myLittlePonies );\r\n    });\r\n  }\r\n\r\n  //this handles the modal close function\r\n  handleClose = () => this.setState({ show: false });\r\n\r\n  //this handles the modal open function\r\n  handleShow = () => this.setState({ show: true });\r\n\r\n  //this function is used shuffle the array passed into it\r\n  shuffleArray = ( array ) => {\r\n    let currentIndex = array.length, tempVal, randomIndex;\r\n    while ( 0 !== currentIndex ) {\r\n      randomIndex = Math.floor( Math.random() * currentIndex );\r\n      currentIndex -= 1;\r\n      tempVal = array[ currentIndex ];\r\n      array[ currentIndex ] = array[ randomIndex ];\r\n      array[ randomIndex ] = tempVal;\r\n    }\r\n    return array;\r\n  }\r\n\r\n  //this function generates a random number between the min and max number\r\n  randomizer = ( min, max ) => Math.floor(( Math.random() * ( max - min + 1 ) + min ));\r\n\r\n  //this determines the Target Score based on difficulty selected\r\n  generateTargetScore = () => {\r\n    if ( this.state.difficulty === 1 ) {\r\n      let x = this.randomizer( 6, 36 );\r\n      this.setState({ targetScore: x });\r\n      return;\r\n    } else if ( this.state.difficulty === 2 ) {\r\n      let x = this.randomizer( 9, 48 );\r\n      this.setState({ targetScore: x });\r\n      return;\r\n    } else if ( this.state.difficulty === 3 ) {\r\n      let x = this.randomizer( 18, 96 );\r\n      this.setState({ targetScore: x });\r\n      return;\r\n    }\r\n  }\r\n\r\n  //run generateTargetScore after the screen has loaded\r\n  componentDidMount = () => {\r\n    this.shuffleArray( this.state.cutieMarks );\r\n    this.shuffleArray( this.state.valArray );\r\n  }\r\n\r\n  //reveals a pony after every win\r\n  selectAPony = ( x ) => {\r\n    let mlpCopy = JSON.parse( JSON.stringify( this.state.myLittlePonies ))\r\n    mlpCopy[ x ].unlocked = 1\r\n    this.setState({ myLittlePonies: mlpCopy })\r\n  }\r\n\r\n  //if Player Score = Target Score\r\n  roundWon = () => {\r\n    let text;\r\n    let x = this.state.playerWins;\r\n    let y = this.state.myLittlePonies.length - 1;\r\n    this.selectAPony( x );\r\n    this.showPony( x );\r\n    if ( x === y ) {\r\n      text = \"Amazing job! You found all the My Little Ponies! It only took you \" + this.state.totalClicks + \" clicks, that is awesome!\";\r\n    } else if ( x < y ) {\r\n      text = \"Good job! You found \" + this.state.myLittlePonies[ x ].name + \"!\";\r\n      this.generateTargetScore();\r\n      this.shuffleArray( this.state.cutieMarks );\r\n      this.shuffleArray( this.state.valArray );\r\n    }\r\n    this.setState({\r\n      playerWins: x + 1,\r\n      playerScore: 0,\r\n      display: text\r\n    });\r\n  }\r\n\r\n  //if Player Score > Target Score\r\n  roundLost = () => {\r\n    let losses = this.state.playerLosses;\r\n    losses++;\r\n    this.setState({\r\n      playerLosses: losses,\r\n      playerScore: 0,\r\n      display: \"That's okay. You can do it. Try Again.\"\r\n    });\r\n    this.generateTargetScore();\r\n    this.shuffleArray( this.state.cutieMarks );\r\n    this.shuffleArray( this.state.valArray );\r\n  }\r\n\r\n  //add value when button is clicked\r\n  clickMark = ( id ) => {\r\n    let y = this.state.myLittlePonies.length;\r\n    if ( this.state.playerWins < y ) {\r\n      let pointValue = id;\r\n      let currentScore = this.state.playerScore;\r\n      let target = this.state.targetScore;\r\n      let clicks = this.state.totalClicks;\r\n      currentScore += pointValue;\r\n      clicks++;\r\n      this.setState({ totalClicks: clicks })\r\n      if ( currentScore > target ) {\r\n        this.roundLost();\r\n      } else if ( currentScore === target ) {\r\n        this.roundWon();\r\n      } else {\r\n        this.setState({ playerScore: currentScore })\r\n      }\r\n    } else {\r\n      this.setState({ // Once DB setup, replace with top ten scores!!!!\r\n        modalTitle: \"Congratulations\",\r\n        modalBody: \"You have found all of the Ponies and their friends! You are Awesome!\",\r\n        modalImage: \"\"\r\n      })\r\n      this.handleShow();\r\n\r\n    }\r\n  }\r\n\r\n  //display pony and bio if pony is unlocked\r\n  clickPony = ( id ) => {\r\n    let thisPony = this.state.myLittlePonies.filter(( e ) => e.id === id );\r\n    if ( thisPony[ 0 ].unlocked === 1 ) {\r\n      this.setState({ \r\n        modalTitle: thisPony[ 0 ].name,\r\n        modalBody: thisPony[ 0 ].bio,\r\n        modalImage: thisPony[ 0 ].image\r\n      })\r\n      this.handleShow();\r\n    }\r\n    else return;\r\n  }\r\n\r\n  //display pony modal when pony is first unlocked\r\n  showPony = ( x ) => {\r\n    let thisPony = this.state.myLittlePonies[ x ];\r\n    this.setState({ \r\n      modalTitle: thisPony.name,\r\n      modalBody: thisPony.bio,\r\n      modalImage: thisPony.image\r\n    })\r\n    this.handleShow();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      !this.state.difficulty ? <Login setDifficulty = { this.setDifficulty }/> :\r\n      <Container fluid = { true }>\r\n        <Row>\r\n          <Col xs = { 12 } sm = { 3 }>\r\n            <Billboard \r\n              display = { this.state.display }\r\n            />          \r\n            <GameArea>\r\n              <Row>\r\n              { this.state.cutieMarks.slice( 0, 4 ).map(( cutieMark, index ) => (\r\n                <CutieMark\r\n                  clickMark = { this.clickMark }\r\n                  key = { cutieMark.id }\r\n                  id = { this.state.difficulty === 3 ? this.state.valArray[ index ] : cutieMark.id }\r\n                  name = { cutieMark.name }\r\n                  image = { cutieMark.image }\r\n                />\r\n              ))}\r\n              </Row>\r\n            </GameArea>\r\n            <Scoreboard \r\n              targetScore = { this.state.targetScore }\r\n              playerScore = { this.state.playerScore }\r\n              playerWins = { this.state.playerWins }\r\n              playerLosses = { this.state.playerLosses }\r\n              totalClicks = { this.state.totalClicks }\r\n            />\r\n          </Col>\r\n          <Col xs = { 12 } sm = { 9 } className = \"pr-0\">\r\n            <PonyArea>\r\n              { this.state.myLittlePonies.map(( myLittlePony ) => (\r\n                <MyLittlePony\r\n                  difficulty = { this.state.difficulty }\r\n                  clickPony = { this.clickPony }\r\n                  key = { myLittlePony.id }\r\n                  id = { myLittlePony.id }\r\n                  name = { myLittlePony.name }\r\n                  image = { myLittlePony.image }\r\n                  unlocked = { myLittlePony.unlocked }\r\n                />\r\n              ))}\r\n            </PonyArea>\r\n          </Col>\r\n        </Row>\r\n        <PonyModal \r\n          handleClose = { this.handleClose }\r\n          show = { this.state.show }\r\n          modalTitle = { this.state.modalTitle }\r\n          modalImage = { this.state.modalImage }\r\n          modalBody = { this.state.modalBody }\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}
{"version":3,"sources":["Components/Scoreboard.js","Components/Billboard.js","Components/GameArea/GameArea.js","Components/GameArea/CutieMark.js","Components/PonyArea/PonyArea.js","Components/PonyArea/MyLittlePony.js","App.js","index.js"],"names":["Scoreboard","props","react_default","a","createElement","className","targetScore","playerScore","playerWins","playerLosses","totalClicks","Billboard","display","GameArea","children","CutieMark","onClick","clickMark","id","alt","name","src","image","PonyArea","MyLittlePony","unlocked","App","state","cutieMarks","CutieMarksJSON","myLittlePoniesEasy","MyLittlePoniesEasyJSON","myLittlePoniesNormal","MyLittlePoniesNormalJSON","myLittlePoniesHard","MyLittlePoniesHardJSON","shuffleArray","array","tempVal","randomIndex","currentIndex","length","Math","floor","random","generateTargetScore","x","_this","setState","selectAPony","mlpCopy","JSON","parse","stringify","roundWon","text","wins","console","log","roundLost","losses","pointValue","currentScore","target","clicks","this","_this2","Container","fluid","Components_Billboard","Components_GameArea_GameArea","slice","map","cutieMark","GameArea_CutieMark","key","Components_Scoreboard","Components_PonyArea_PonyArea","myLittlePony","PonyArea_MyLittlePony","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.fd2ceba2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nconst Scoreboard = ( props ) => {\r\n  return (\r\n    <div className = \"scoreboard\">\r\n      <span className = \"heading\">Target Score:</span>\r\n      <span className = \"data\">{ props.targetScore }</span>\r\n      <span className = \"heading\">Player Score:</span>\r\n      <span className = \"data\">{ props.playerScore }</span>\r\n      <span className = \"heading\">Player Wins:</span>\r\n      <span className = \"data\">{ props.playerWins }</span>\r\n      <span className = \"heading\">Player Losses:</span>\r\n      <span className = \"data\">{ props.playerLosses }</span>\r\n      <span className = \"heading\">Total Clicks:</span>\r\n      <span className = \"data\">{ props.totalClicks }</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Scoreboard;","import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nconst Billboard = ( props ) => {\r\n  return (\r\n    <div className = \"scoreboard\">\r\n      <span className = \"billboardText\">{ props.display }</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Billboard;","import React from \"react\";\r\nimport \"../../App.css\";\r\n\r\nconst GameArea = ( props ) => {\r\n  return (\r\n    <div className = \"gameArea\">\r\n      { props.children }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameArea;","import React from \"react\";\r\nimport \"../../App.css\";\r\n\r\nconst CutieMark = ( props ) => {\r\n  return (\r\n    <div\r\n      className = \"imgContainer hovereffect\"\r\n      onClick = { () => props.clickMark( props.id )}\r\n    >\r\n      <img\r\n        alt = { props.name }\r\n        src = { props.image }\r\n        className = \"cutieMark\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CutieMark;","import React from \"react\";\r\nimport \"../../App.css\";\r\n\r\nconst PonyArea = ( props ) => {\r\n  return (\r\n    <div className = \"ponyArea\">\r\n      { props.children }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PonyArea;","import React from \"react\";\r\nimport \"../../App.css\";\r\n\r\nconst MyLittlePony = ( props ) => {\r\n  return (\r\n    <div className = \"ponyContainer\">\r\n      <img\r\n        alt = { props.name }\r\n        src = { props.image }\r\n        unlocked = { props.unlocked }\r\n        className = { props.unlocked ? \"myLittlePony found\" : \"myLittlePony hidden\" }\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyLittlePony;","import React, { Component } from 'react';\r\nimport { Container } from \"react-bootstrap\";\r\nimport CutieMarksJSON from \"./CutieMarks.json\";\r\nimport MyLittlePoniesEasyJSON from \"./myLittlePoniesEasy.json\";\r\nimport MyLittlePoniesNormalJSON from \"./myLittlePoniesNormal.json\";\r\nimport MyLittlePoniesHardJSON from \"./myLittlePoniesHard.json\";\r\nimport Scoreboard from \"./Components/Scoreboard\";\r\nimport Billboard from \"./Components/Billboard\";\r\nimport GameArea from \"./Components/GameArea/GameArea\";\r\nimport CutieMark from \"./Components/GameArea/CutieMark.js\";\r\nimport PonyArea from \"./Components/PonyArea/PonyArea\";\r\nimport MyLittlePony from \"./Components/PonyArea/MyLittlePony\";\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    playerWins: 0,\r\n    playerLosses: 0,\r\n    targetScore: 0,\r\n    playerScore: 0,\r\n    totalClicks: 0,\r\n    cutieMarks: CutieMarksJSON,\r\n    myLittlePoniesEasy: MyLittlePoniesEasyJSON,\r\n    myLittlePoniesNormal: MyLittlePoniesNormalJSON,\r\n    myLittlePoniesHard: MyLittlePoniesHardJSON,\r\n    display: \"Match the Target Score by clicking on the Cutie Marks, each Cutie Mark has a hidden value.\"\r\n  }\r\n\r\n  // function to shuffle array\r\n  shuffleArray = ( array ) => {\r\n    let currentIndex = array.length, tempVal, randomIndex;\r\n    while ( 0 !== currentIndex ) {\r\n      randomIndex = Math.floor( Math.random() * currentIndex );\r\n      currentIndex -= 1;\r\n      tempVal = array[ currentIndex ];\r\n      array[ currentIndex ] = array[ randomIndex ];\r\n      array[ randomIndex ] = tempVal;\r\n    }\r\n    return array;\r\n  }\r\n\r\n  // generate random number between 18 and 36 for the Target Score\r\n  generateTargetScore = () => {\r\n    let x = Math.floor(( Math.random() * 29 ) + 6 );\r\n    this.setState({ targetScore: x})\r\n  }\r\n\r\n  // run generateTargetScore after the screen has loaded\r\n  componentDidMount() {\r\n    this.generateTargetScore();\r\n    this.shuffleArray( this.state.cutieMarks );\r\n    this.shuffleArray( this.state.myLittlePoniesEasy );\r\n  }\r\n\r\n  // reveals a pony after every fifth win\r\n  selectAPony = ( x ) => {\r\n    let mlpCopy = JSON.parse( JSON.stringify( this.state.myLittlePoniesEasy ))\r\n    mlpCopy[ x ].unlocked = 1\r\n    this.setState({ myLittlePoniesEasy: mlpCopy })\r\n  }\r\n\r\n  // if Player Score = Target Score\r\n  roundWon = () => {\r\n    let text;\r\n    let wins = this.state.playerWins;\r\n    wins++;\r\n    console.log( wins );\r\n    if ( wins === 12 ) {\r\n      text = \"Amazing job! You found all the My Little Ponies! It only took you \" + this.state.totalClicks + \" clicks, that is awesome!\";\r\n    } else if ( wins < 12 ) {\r\n      let x = this.state.playerWins;\r\n      text = \"Good job! You found \" + this.state.myLittlePoniesEasy[ x ].name + \"!\";\r\n      this.selectAPony( x );\r\n    } else if ( wins > 12 ) {\r\n      text = \"You have found all of the My Little Ponies, click HERE to play again.\"\r\n    }\r\n    this.setState({\r\n      playerWins: wins,\r\n      playerScore: 0,\r\n      display: text\r\n    });\r\n    this.generateTargetScore();\r\n    this.shuffleArray( this.state.cutieMarks );\r\n  }\r\n\r\n  // if Player Score > Target Score\r\n  roundLost = () => {\r\n    let losses = this.state.playerLosses;\r\n    losses++;\r\n    this.setState({\r\n      playerLosses: losses,\r\n      playerScore: 0,\r\n      display: \"That's okay. You can do it. Try again.\"\r\n    });\r\n    this.generateTargetScore();\r\n    this.shuffleArray( this.state.cutieMarks );\r\n  }\r\n\r\n  // add value when button is clicked\r\n  clickMark = ( id ) => {\r\n    let pointValue = id;\r\n    let currentScore = this.state.playerScore;\r\n    let target = this.state.targetScore;\r\n    let clicks = this.state.totalClicks;\r\n    currentScore += pointValue;\r\n    clicks++;\r\n    this.setState({ totalClicks: clicks })\r\n    if ( currentScore > target ) {\r\n      this.roundLost();\r\n    } else if ( currentScore === target ) {\r\n      this.roundWon();\r\n    } else {\r\n      this.setState({ playerScore: currentScore })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid = { true }>\r\n        <Billboard \r\n          display = { this.state.display }\r\n        />\r\n        <GameArea>\r\n          { this.state.cutieMarks.slice( 0, 4 ).map(( cutieMark ) => (\r\n            <CutieMark\r\n              clickMark = { this.clickMark }\r\n              key = { cutieMark.id }\r\n              id = { cutieMark.id }\r\n              name = { cutieMark.name }\r\n              image = { cutieMark.image }\r\n            />\r\n          ))}\r\n        </GameArea>\r\n        <Scoreboard \r\n          targetScore = { this.state.targetScore }\r\n          playerScore = { this.state.playerScore }\r\n          playerWins = { this.state.playerWins }\r\n          playerLosses = { this.state.playerLosses }\r\n          totalClicks = { this.state.totalClicks }\r\n        />\r\n        <PonyArea>\r\n          { this.state.myLittlePoniesEasy.map(( myLittlePony ) => (\r\n            <MyLittlePony\r\n              key = { myLittlePony.id }\r\n              name = { myLittlePony.name }\r\n              image = { myLittlePony.image }\r\n              unlocked = { myLittlePony.unlocked }\r\n            />\r\n          ))}\r\n        </PonyArea>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}
{"version":3,"sources":["Components/GameArea/CutieMark.js","Components/Login/index.js","Components/GameOver/index.js","Components/GameArea/GameArea.js","Components/PonyArea/MyLittlePony.js","Components/PonyArea/PonyArea.js","Components/Billboard.js","Components/PonyModal.js","Components/Scoreboard.js","App.js","index.js"],"names":["CutieMark","props","Col","xs","sm","className","onClick","clickMark","id","alt","name","src","image","Login","Container","Row","value","type","autoComplete","onChange","handleInputChange","setDifficulty","GameOver","startNewGame","GameArea","children","MyLittlePony","lg","xl","clickPony","unlocked","PonyArea","Billboard","display","PonyModal","Modal","show","onHide","handleClose","Header","Title","modalTitle","Body","modalImage","modalBody","Footer","Button","Scoreboard","targetScore","playerScore","playerWins","playerLosses","totalClicks","App","context","event","target","setState","playerName","x","state","myLittlePonies","slice","difficulty","generateTargetScore","shuffleArray","handleShow","gameStatus","MyLittlePoniesJSON","array","tempVal","randomIndex","currentIndex","length","Math","floor","random","randomizer","min","max","componentDidMount","cutieMarks","valArray","selectAPony","mlpCopy","JSON","parse","stringify","roundWon","text","y","showPony","roundLost","losses","pointValue","currentScore","clicks","thisPony","filter","e","bio","bind","CutieMarksJSON","this","fluid","map","cutieMark","index","key","myLittlePony","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.29d5c0cc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Col } from \"react-bootstrap\";\r\n\r\nconst CutieMark = ( props ) => {\r\n  return (\r\n    <Col \r\n      xs = { 3 } sm = { 6 }\r\n      className = \"hovereffect p-2 m-0\"\r\n      onClick = { () => props.clickMark( props.id )}\r\n    >\r\n      <img\r\n        alt = { props.name }\r\n        src = { props.image }\r\n        className = \"cutieMark\"\r\n      />\r\n    </Col>\r\n  )\r\n}\r\n\r\nexport default CutieMark;","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst Login = ( props ) => {\r\n  return (\r\n    <Container>\r\n      <Row className = \"justify-content-center\">\r\n        <Col xs = { 12 } sm = { 6 } className = \"login p-5 my-5\">\r\n          <form>\r\n            <h1>Welcome to Ponyville.</h1>\r\n            <p>What is your name?</p>\r\n            <input\r\n              value = { props.name }\r\n              name = \"name\"\r\n              type = \"text\"\r\n              autoComplete = \"off\"\r\n              className = \"nameInput mb-2 p-1\"\r\n              onChange = { props.handleInputChange }\r\n            />\r\n            <p>Can you rescue the missing My Little Ponies and all their friends?</p>\r\n            <p>Select Difficulty:</p>\r\n            <button className = \"loginBtn p-2 m-2\" type = \"button\" value = \"1\" onClick = {() => props.setDifficulty( 1 )}>Easy</button>\r\n            <button className = \"loginBtn p-2 m-2\" type = \"button\" value = \"2\" onClick = {() => props.setDifficulty( 2 )}>Normal</button>\r\n            <button className = \"loginBtn p-2 m-2\" type = \"button\" value = \"3\" onClick = {() => props.setDifficulty( 3 )}>Hard</button>\r\n          </form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\n\r\nconst GameOver = ( props ) => {\r\n  return(\r\n    <div className = \"gameOver p-2 m-2\">\r\n      <button\r\n        className = \"gameOverBtn p-2 mb-2\"\r\n        type = \"button\"\r\n        onClick = {() => props.startNewGame( 1 )}\r\n      >\r\n        Play Easy Game\r\n      </button>\r\n      <button\r\n        className = \"gameOverBtn p-2 mb-2\"\r\n        type = \"button\"\r\n        onClick = {() => props.startNewGame( 2 )}\r\n      >\r\n        Play Normal Game\r\n      </button>\r\n      <button\r\n        className = \"gameOverBtn p-2\"\r\n        type = \"button\"\r\n        onClick = {() => props.startNewGame( 3 )}\r\n      >\r\n        Play Hard Game\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GameOver;","import React from \"react\";\r\n\r\nconst GameArea = ( props ) => {\r\n  return (\r\n    <div className = \"gameArea p-2 m-2\">\r\n      { props.children }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameArea;","import React from \"react\";\r\nimport { Col } from \"react-bootstrap\";\r\n\r\nconst MyLittlePony = ( props ) => {\r\n  return (\r\n    <Col \r\n      xs = { 3 } sm = { 4 } lg = { 3 } xl = { 2 }\r\n      className = \"ponyContainer p-2\"\r\n      onClick = { () => props.clickPony( props.id ) }\r\n    >\r\n      <img\r\n        alt = { props.name }\r\n        src = { props.image }\r\n        unlocked = { props.unlocked }\r\n        className = { props.unlocked ? \"myLittlePony found\" : \"myLittlePony hidden\" }\r\n      />\r\n    </Col>\r\n  )\r\n}\r\n\r\nexport default MyLittlePony;","import React from \"react\";\r\n\r\nconst PonyArea = ( props ) => {\r\n  return (\r\n    <div className = \"ponyArea p-2\">\r\n      { props.children }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PonyArea;","import React from \"react\";\r\n\r\nconst Billboard = ( props ) => {\r\n  return (\r\n    <div className = \"textboard p-2 m-2\">\r\n      <span className = \"text-center\">{ props.display }</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Billboard;","import React from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nconst PonyModal = ( props ) => {\r\n  return (\r\n    <Modal show = { props.show } onHide = { props.handleClose }>\r\n      <Modal.Header className = \"modalHeader\">\r\n        <Modal.Title>{ props.modalTitle }</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className = \"modalBody\">\r\n        <img \r\n          src = { props.modalImage }\r\n          alt = { props.modalTitle }\r\n          className = \"modalImg\"\r\n        />\r\n        <p>{ props.modalBody }</p>\r\n      </Modal.Body>\r\n      <Modal.Footer className = \"modalFooter\">\r\n        <Button \r\n          onClick = { () => props.handleClose() }\r\n          className = \"modalBtn mx-auto\"\r\n        >\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default PonyModal;","import React from \"react\";\r\n\r\nconst Scoreboard = ( props ) => {\r\n  return (\r\n    <div className = \"textboard p-2 m-2\">\r\n      <span className = \"heading\">Target Score:</span>\r\n      <span className = \"data\">{ props.targetScore }</span>\r\n      <span className = \"heading\">Player Score:</span>\r\n      <span className = \"data\">{ props.playerScore }</span>\r\n      <span className = \"heading\">Player Wins:</span>\r\n      <span className = \"data\">{ props.playerWins }</span>\r\n      <span className = \"heading\">Player Losses:</span>\r\n      <span className = \"data\">{ props.playerLosses }</span>\r\n      <span className = \"heading\">Total Clicks:</span>\r\n      <span className = \"data\">{ props.totalClicks }</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Scoreboard;","import React, { Component } from 'react';\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport CutieMarksJSON from \"./JSON/CutieMarks.json\";\r\nimport MyLittlePoniesJSON from \"./JSON/myLittlePonies.json\";\r\nimport CutieMark from \"./Components/GameArea/CutieMark.js\";\r\nimport Login from \"./Components/Login\";\r\nimport GameOver from \"./Components/GameOver\";\r\nimport GameArea from \"./Components/GameArea/GameArea.js\";\r\nimport MyLittlePony from \"./Components/PonyArea/MyLittlePony\";\r\nimport PonyArea from \"./Components/PonyArea/PonyArea\";\r\nimport Billboard from \"./Components/Billboard\";\r\nimport PonyModal from \"./Components/PonyModal\";\r\nimport Scoreboard from \"./Components/Scoreboard\";\r\nimport \"./styles.scss\";\r\n\r\nclass App extends Component {\r\n  constructor( props, context ){\r\n    super ( props, context );\r\n    this.startNewGame = this.startNewGame.bind( this );\r\n    this.setDifficulty = this.setDifficulty.bind( this );\r\n    this.handleShow = this.handleShow.bind( this );\r\n    this.handleClose = this.handleClose.bind( this );\r\n    this.state = {\r\n      playerName: 0, //active players name\r\n      playerWins: 0, //how many times the player matched the target score\r\n      playerLosses: 0, //how many times the player went over the target score\r\n      targetScore: 0, //the score the player needs to match\r\n      playerScore: 0, //the active players score\r\n      totalClicks: 0, //tallys total number of clicks to beat game\r\n      difficulty: 0, //easy(1), hard(3), normal(2)\r\n      gameStatus: 1, //is the game going or not\r\n      cutieMarks: CutieMarksJSON, //array to draw game buttons from \r\n      myLittlePonies: MyLittlePoniesJSON, //array to draw the ponies to be rescued from \r\n      valArray: [ 1,2,3,4,5,6,7,8,9 ], //number array for hard difficulty\r\n      display: \"Match the Target Score by clicking on the Cutie Marks, each Cutie Mark has a hidden value.\", //instructions and encouragement for player\r\n      show: false, //is the modal visible or not\r\n      modalBody: \"Temp Body\", //body of the modal\r\n      modalTitle: \"Temp Title\", //title of the modal\r\n      modalImage: \"Temp Image\" //image for the modal\r\n    }\r\n  }\r\n\r\n  //this handles the change when player enters there name on login\r\n  handleInputChange = ( event ) => {\r\n    const { value } = event.target;\r\n    this.setState({ playerName: value })\r\n  }\r\n\r\n  //this sets the game difficulty, then generates the score AFTER the difficulty is set\r\n  setDifficulty = ( x ) => {\r\n    if ( !this.state.playerName ) {\r\n      this.setState({\r\n        modalTitle: \"Sorry, please enter your name to play.\",\r\n        modalBody: \"\",\r\n        modalImage: \"images/sadPony.gif\"\r\n      }, () => { this.handleShow(); })\r\n    } else {\r\n      if ( x === 1 ) { \r\n        this.setState({ myLittlePonies: this.state.myLittlePonies.slice( 0, 12 )});\r\n      } else if ( x === 2 ) {\r\n        this.setState({ myLittlePonies: this.state.myLittlePonies.slice( 0, 24 )});\r\n      }\r\n      this.setState({ difficulty: x, }, () => { \r\n        this.generateTargetScore();\r\n        this.shuffleArray( this.state.myLittlePonies );\r\n      });\r\n    }\r\n  }\r\n\r\n  //start a new game\r\n  startNewGame = ( x ) => {\r\n    this.setState({\r\n      playerWins: 0,\r\n      playerLosses: 0,\r\n      targetScore: 0,\r\n      playerScore: 0,\r\n      totalClicks: 0,\r\n      gameStatus: 1,\r\n      myLittlePonies: MyLittlePoniesJSON,\r\n      display: \"Match the Target Score by clicking on the Cutie Marks, each Cutie Mark has a hidden value.\",\r\n    }, () => {\r\n      this.setDifficulty( x );\r\n    });\r\n  }\r\n\r\n  //this handles the modal close function\r\n  handleClose = () => this.setState({ show: false });\r\n\r\n  //this handles the modal open function\r\n  handleShow = () => this.setState({ show: true });\r\n\r\n  //this function is used shuffle the array passed into it\r\n  shuffleArray = ( array ) => {\r\n    let currentIndex = array.length, tempVal, randomIndex;\r\n    while ( 0 !== currentIndex ) {\r\n      randomIndex = Math.floor( Math.random() * currentIndex );\r\n      currentIndex -= 1;\r\n      tempVal = array[ currentIndex ];\r\n      array[ currentIndex ] = array[ randomIndex ];\r\n      array[ randomIndex ] = tempVal;\r\n    }\r\n    return array;\r\n  }\r\n\r\n  //this function generates a random number between the min and max number\r\n  randomizer = ( min, max ) => Math.floor(( Math.random() * ( max - min + 1 ) + min ));\r\n\r\n  //this determines the Target Score based on difficulty selected\r\n  generateTargetScore = () => {\r\n    if ( this.state.difficulty === 1 ) {\r\n      let x = this.randomizer( 6, 36 );\r\n      this.setState({ targetScore: x });\r\n      return;\r\n    } else if ( this.state.difficulty === 2 ) {\r\n      let x = this.randomizer( 9, 48 );\r\n      this.setState({ targetScore: x });\r\n      return;\r\n    } else if ( this.state.difficulty === 3 ) {\r\n      let x = this.randomizer( 18, 96 );\r\n      this.setState({ targetScore: x });\r\n      return;\r\n    }\r\n  }\r\n\r\n  //run generateTargetScore after the screen has loaded\r\n  componentDidMount = () => {\r\n    this.shuffleArray( this.state.cutieMarks );\r\n    this.shuffleArray( this.state.valArray );\r\n  }\r\n\r\n  //reveals a pony after every win\r\n  selectAPony = ( x ) => {\r\n    let mlpCopy = JSON.parse( JSON.stringify( this.state.myLittlePonies ))\r\n    mlpCopy[ x ].unlocked = 1\r\n    this.setState({ myLittlePonies: mlpCopy })\r\n  }\r\n\r\n  //if Player Score = Target Score\r\n  roundWon = () => {\r\n    let text;\r\n    let name = this.state.playerName;\r\n    let x = this.state.playerWins;\r\n    let y = this.state.myLittlePonies.length - 1;\r\n    this.selectAPony( x );\r\n    this.showPony( x );\r\n    if ( x === y ) {\r\n      text = \"Amazing job, \" + name + \"! You found all the My Little Ponies! It only took you \" + this.state.totalClicks + \" clicks, that is awesome! Do you want to play again?\";\r\n      this.setState({ gameStatus: 0 });\r\n    } else if ( x < y ) {\r\n      text = \"Good job, \" + name + \"! You found \" + this.state.myLittlePonies[ x ].name + \"!\";\r\n      this.generateTargetScore();\r\n      this.shuffleArray( this.state.cutieMarks );\r\n      this.shuffleArray( this.state.valArray );\r\n    }\r\n    this.setState({\r\n      playerWins: x + 1,\r\n      playerScore: 0,\r\n      display: text,\r\n    });\r\n  }\r\n\r\n  //if Player Score > Target Score\r\n  roundLost = () => {\r\n    let losses = this.state.playerLosses;\r\n    let name = this.state.playerName;\r\n    losses++;\r\n    this.setState({\r\n      playerLosses: losses,\r\n      playerScore: 0,\r\n      display: \"That's okay, \" + name + \". You can do it. Try Again.\"\r\n    });\r\n    this.generateTargetScore();\r\n    this.shuffleArray( this.state.cutieMarks );\r\n    this.shuffleArray( this.state.valArray );\r\n  }\r\n\r\n  //add value when button is clicked\r\n  clickMark = ( id ) => {\r\n    let pointValue = id;\r\n    let currentScore = this.state.playerScore;\r\n    let target = this.state.targetScore;\r\n    let clicks = this.state.totalClicks;\r\n    currentScore += pointValue;\r\n    clicks++;\r\n    this.setState({ totalClicks: clicks })\r\n    if ( currentScore > target ) {\r\n      this.roundLost();\r\n    } else if ( currentScore === target ) {\r\n      this.roundWon();\r\n    } else {\r\n      this.setState({ playerScore: currentScore })\r\n    }\r\n  }\r\n\r\n  //display pony and bio if pony is unlocked\r\n  clickPony = ( id ) => {\r\n    let thisPony = this.state.myLittlePonies.filter(( e ) => e.id === id );\r\n    if ( thisPony[ 0 ].unlocked === 1 ) {\r\n      this.setState({ \r\n        modalTitle: thisPony[ 0 ].name,\r\n        modalBody: thisPony[ 0 ].bio,\r\n        modalImage: thisPony[ 0 ].image\r\n      })\r\n      this.handleShow();\r\n    }\r\n    else return;\r\n  }\r\n\r\n  //display pony modal when pony is first unlocked\r\n  showPony = ( x ) => {\r\n    let thisPony = this.state.myLittlePonies[ x ];\r\n    this.setState({ \r\n      modalTitle: thisPony.name,\r\n      modalBody: thisPony.bio,\r\n      modalImage: thisPony.image\r\n    })\r\n    this.handleShow();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      !this.state.difficulty\r\n    ?\r\n      <Container fluid = {true}>\r\n        <Login \r\n          setDifficulty = { this.setDifficulty }\r\n          handleInputChange = { this.handleInputChange }\r\n        />\r\n        <PonyModal \r\n          handleClose = { this.handleClose }\r\n          show = { this.state.show }\r\n          modalTitle = { this.state.modalTitle }\r\n          modalImage = { this.state.modalImage }\r\n          modalBody = { this.state.modalBody }\r\n        />\r\n      </Container>\r\n    :\r\n      <Container fluid = { true }>\r\n        <Row>\r\n          <Col xs = { 12 } sm = { 3 } xl = { 2 } className = \"pl-0\">\r\n            <Billboard \r\n              display = { this.state.display }\r\n            />\r\n            { this.state.gameStatus === 1 \r\n            ? \r\n              <GameArea>\r\n                <Row>\r\n                  { this.state.cutieMarks.slice( 0, 4 ).map(( cutieMark, index ) => (\r\n                    <CutieMark\r\n                      clickMark = { this.clickMark }\r\n                      key = { cutieMark.id }\r\n                      id = { this.state.difficulty === 3 ? this.state.valArray[ index ] : cutieMark.id }\r\n                      name = { cutieMark.name }\r\n                      image = { cutieMark.image }\r\n                    />\r\n                  ))}\r\n                </Row>\r\n              </GameArea>\r\n            : \r\n              <GameOver startNewGame = { this.startNewGame } />\r\n            }      \r\n            <Scoreboard \r\n              targetScore = { this.state.targetScore }\r\n              playerScore = { this.state.playerScore }\r\n              playerWins = { this.state.playerWins }\r\n              playerLosses = { this.state.playerLosses }\r\n              totalClicks = { this.state.totalClicks }\r\n            />\r\n          </Col>\r\n          <Col xs = { 12 } sm = { 9 } xl = { 10 }className = \"p-0\">\r\n            <PonyArea>\r\n              { this.state.myLittlePonies.map(( myLittlePony ) => (\r\n                <MyLittlePony\r\n                  difficulty = { this.state.difficulty }\r\n                  clickPony = { this.clickPony }\r\n                  key = { myLittlePony.id }\r\n                  id = { myLittlePony.id }\r\n                  name = { myLittlePony.name }\r\n                  image = { myLittlePony.image }\r\n                  unlocked = { myLittlePony.unlocked }\r\n                />\r\n              ))}\r\n            </PonyArea>\r\n          </Col>\r\n        </Row>\r\n        <PonyModal \r\n          handleClose = { this.handleClose }\r\n          show = { this.state.show }\r\n          modalTitle = { this.state.modalTitle }\r\n          modalImage = { this.state.modalImage }\r\n          modalBody = { this.state.modalBody }\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}
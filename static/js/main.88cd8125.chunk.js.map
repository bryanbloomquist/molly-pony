{"version":3,"sources":["Components/Scoreboard.js","Components/Billboard.js","Components/GameArea/GameArea.js","Components/GameArea/CutieMark.js","Components/PonyArea/PonyArea.js","Components/PonyArea/MyLittlePony.js","App.js","index.js"],"names":["Scoreboard","props","react_default","a","createElement","className","targetScore","playerScore","playerWins","playerLosses","totalClicks","Billboard","display","GameArea","children","CutieMark","onClick","clickMark","id","alt","name","src","image","PonyArea","MyLittlePony","unlocked","App","state","cutieMarks","CutieMarksJSON","myLittlePonies","MyLittlePoniesJSON","shuffleArray","array","tempVal","randomIndex","currentIndex","length","Math","floor","random","generateTargetScore","x","_this","setState","selectAPony","mlpCopy","JSON","parse","stringify","roundWon","text","wins","roundLost","losses","pointValue","currentScore","target","clicks","this","_this2","Container","fluid","Components_Billboard","Components_GameArea_GameArea","slice","map","cutieMark","GameArea_CutieMark","key","Components_Scoreboard","Components_PonyArea_PonyArea","myLittlePony","PonyArea_MyLittlePony","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.88cd8125.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nconst Scoreboard = ( props ) => {\r\n  return (\r\n    <div className = \"scoreboard\">\r\n      <span className = \"heading\">Target Score:</span>\r\n      <span className = \"data\">{ props.targetScore }</span>\r\n      <span className = \"heading\">Player Score:</span>\r\n      <span className = \"data\">{ props.playerScore }</span>\r\n      <span className = \"heading\">Player Wins:</span>\r\n      <span className = \"data\">{ props.playerWins }</span>\r\n      <span className = \"heading\">Player Losses:</span>\r\n      <span className = \"data\">{ props.playerLosses }</span>\r\n      <span className = \"heading\">Total Clicks:</span>\r\n      <span className = \"data\">{ props.totalClicks }</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Scoreboard;","import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nconst Billboard = ( props ) => {\r\n  return (\r\n    <div className = \"scoreboard\">\r\n      <span className = \"billboardText\">{ props.display }</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Billboard;","import React from \"react\";\r\nimport \"../../App.css\";\r\n\r\nconst GameArea = ( props ) => {\r\n  return (\r\n    <div className = \"gameArea\">\r\n      { props.children }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameArea;","import React from \"react\";\r\nimport \"../../App.css\";\r\n\r\nconst CutieMark = ( props ) => {\r\n  return (\r\n    <div\r\n      className = \"imgContainer hovereffect\"\r\n      onClick = { () => props.clickMark( props.id )}\r\n    >\r\n      <img\r\n        alt = { props.name }\r\n        src = { props.image }\r\n        className = \"cutieMark\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CutieMark;","import React from \"react\";\r\nimport \"../../App.css\";\r\n\r\nconst PonyArea = ( props ) => {\r\n  return (\r\n    <div className = \"ponyArea\">\r\n      { props.children }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PonyArea;","import React from \"react\";\r\nimport \"../../App.css\";\r\n\r\nconst MyLittlePony = ( props ) => {\r\n  return (\r\n    <div className = \"ponyContainer\">\r\n      <img\r\n        alt = { props.name }\r\n        src = { props.image }\r\n        unlocked = { props.unlocked }\r\n        className = { props.unlocked ? \"myLittlePony found\" : \"myLittlePony hidden\" }\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyLittlePony;","import React, { Component } from 'react';\nimport { Container } from \"react-bootstrap\";\nimport CutieMarksJSON from \"./CutieMarks.json\";\nimport MyLittlePoniesJSON from \"./MyLittlePonies.json\";\nimport Scoreboard from \"./Components/Scoreboard\";\nimport Billboard from \"./Components/Billboard\";\nimport GameArea from \"./Components/GameArea/GameArea\";\nimport CutieMark from \"./Components/GameArea/CutieMark.js\";\nimport PonyArea from \"./Components/PonyArea/PonyArea\";\nimport MyLittlePony from \"./Components/PonyArea/MyLittlePony\";\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n    playerWins: 0,\n    playerLosses: 0,\n    targetScore: 0,\n    playerScore: 0,\n    totalClicks: 0,\n    cutieMarks: CutieMarksJSON,\n    myLittlePonies: MyLittlePoniesJSON,\n    display: \"Match the Target Score by clicking on the Cutie Marks, each Cutie Mark has a hidden value.\"\n  }\n\n  // function to shuffle array\n  shuffleArray = ( array ) => {\n    let currentIndex = array.length, tempVal, randomIndex;\n    while ( 0 !== currentIndex ) {\n      randomIndex = Math.floor( Math.random() * currentIndex );\n      currentIndex -= 1;\n      tempVal = array[ currentIndex ];\n      array[ currentIndex ] = array[ randomIndex ];\n      array[ randomIndex ] = tempVal;\n    }\n    return array;\n  }\n\n  // generate random number between 18 and 36 for the Target Score\n  generateTargetScore = () => {\n    let x = Math.floor(( Math.random() * 29 ) + 6 );\n    this.setState({ targetScore: x})\n  }\n\n  // run generateTargetScore after the screen has loaded\n  componentDidMount() {\n    this.generateTargetScore();\n    this.shuffleArray( this.state.cutieMarks );\n    this.shuffleArray( this.state.myLittlePonies );\n  }\n\n  // reveals a pony after every fifth win\n  selectAPony = ( x ) => {\n    let mlpCopy = JSON.parse( JSON.stringify( this.state.myLittlePonies ))\n    mlpCopy[ x ].unlocked = 1\n    this.setState({ myLittlePonies: mlpCopy })\n  }\n\n  // if Player Score = Target Score\n  roundWon = () => {\n    let text;\n    let wins = this.state.playerWins;\n    wins++;\n    if ( wins === 60 ) {\n      text = \"Amazing job! You found all the My Little Ponies! It only took you \" + this.state.totalClicks + \"clicks, that is awesome!\";\n    } else if ( wins % 5 === 0 ) {\n      let x = (( this.state.playerWins + 1 ) / 5 ) - 1;\n      text = \"Good job! You found \" + this.state.myLittlePonies[ x ].name + \"!\";\n      this.selectAPony( x );\n    } else if ( wins < 5 ) {\n      let remainder = 5 - wins;\n      text = \"Good job, match \" + remainder + \" more to find a pony!\"\n    } else if ( wins > 5 && wins % 5 !== 0 ) {\n      text = \"Good job, match \" + ( 5 - ( wins%5 )) + \" more to find another pony!\"\n    }\n    this.setState({\n      playerWins: wins,\n      playerScore: 0,\n      display: text\n    });\n    this.generateTargetScore();\n    this.shuffleArray( this.state.cutieMarks );\n  }\n\n  // if Player Score > Target Score\n  roundLost = () => {\n    let losses = this.state.playerLosses;\n    losses++;\n    this.setState({\n      playerLosses: losses,\n      playerScore: 0,\n      display: \"That's okay. You can do it. Try again.\"\n    });\n    this.generateTargetScore();\n    this.shuffleArray( this.state.cutieMarks );\n  }\n\n  // add value when button is clicked\n  clickMark = ( id ) => {\n    let pointValue = id;\n    let currentScore = this.state.playerScore;\n    let target = this.state.targetScore;\n    let clicks = this.state.totalClicks;\n    currentScore += pointValue;\n    clicks++;\n    this.setState({ totalClicks: clicks })\n    if ( currentScore > target ) {\n      this.roundLost();\n    } else if ( currentScore === target ) {\n      this.roundWon();\n    } else {\n      this.setState({ playerScore: currentScore })\n    }\n  }\n\n  render() {\n    return (\n      <Container fluid = { true }>\n        <Billboard \n          display = { this.state.display }\n        />\n        <GameArea>\n          { this.state.cutieMarks.slice( 0, 4 ).map(( cutieMark ) => (\n            <CutieMark\n              clickMark = { this.clickMark }\n              key = { cutieMark.id }\n              id = { cutieMark.id }\n              name = { cutieMark.name }\n              image = { cutieMark.image }\n            />\n          ))}\n        </GameArea>\n        <Scoreboard \n          targetScore = { this.state.targetScore }\n          playerScore = { this.state.playerScore }\n          playerWins = { this.state.playerWins }\n          playerLosses = { this.state.playerLosses }\n          totalClicks = { this.state.totalClicks }\n        />\n        <PonyArea>\n          { this.state.myLittlePonies.map(( myLittlePony ) => (\n            <MyLittlePony\n              key = { myLittlePony.id }\n              name = { myLittlePony.name }\n              image = { myLittlePony.image }\n              unlocked = { myLittlePony.unlocked }\n            />\n          ))}\n        </PonyArea>\n      </Container>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}